# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-2019
  name: Azure Pipelines
  demands:
  - MSBuild
  - Xamarin.Android
  - JDK

variables:
  BuildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 5.x'
  inputs:
    versionSpec: 5.x

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.restorePkgSolution)'

- task: XamarinAndroid@1
  displayName: 'Build Xamarin.Android'
  inputs:
    projectFile: 'carros_xamarin_clean/carros_xamarin_clean.Android/carros_xamarin_clean.Android.csproj'
    outputDirectory: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput'
    configuration: '$(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'carros_xamarin_clean/carros_xamarin_clean.Test/carros_xamarin_clean.Test.csproj'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  enabled: false

- task: AndroidSigning@3
  displayName: 'Signing and aligning'
  inputs:
    apkFiles: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput/*.apk'
    apksignerKeystoreFile: '1a14c806-297b-4ed6-a475-bb2a4c5a6610'
    apksignerKeystorePassword: '$(key_password)'
    apksignerKeystoreAlias: CarrosSample
    apksignerKeyPassword: '$(key_password)'
    apksignerArguments: '--verbose  --min-sdk-version 21'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: android-artifact'
  inputs:
    PathtoPublish: '$(build.binariesdirectory)/$(BuildConfiguration)/AndroidOutput'
    ArtifactName: 'android-artifact'
  condition: succeededOrFailed()